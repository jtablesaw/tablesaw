/**
 * generated by Xtext 2.14.0
 */
package tablesaw.xtext.xaw.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import tablesaw.xtext.xaw.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class XawFactoryImpl extends EFactoryImpl implements XawFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static XawFactory init()
  {
    try
    {
      XawFactory theXawFactory = (XawFactory)EPackage.Registry.INSTANCE.getEFactory(XawPackage.eNS_URI);
      if (theXawFactory != null)
      {
        return theXawFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new XawFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XawFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case XawPackage.XMETHOD: return createXMethod();
      case XawPackage.XAW: return createXaw();
      case XawPackage.TABLE_LITERAL: return createTableLiteral();
      case XawPackage.TABLE_COLUMN: return createTableColumn();
      case XawPackage.INLINE_TABLE_ROW: return createInlineTableRow();
      case XawPackage.TABLE_ROW_LITERAL: return createTableRowLiteral();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XMethod createXMethod()
  {
    XMethodImpl xMethod = new XMethodImpl();
    return xMethod;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Xaw createXaw()
  {
    XawImpl xaw = new XawImpl();
    return xaw;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TableLiteral createTableLiteral()
  {
    TableLiteralImpl tableLiteral = new TableLiteralImpl();
    return tableLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TableColumn createTableColumn()
  {
    TableColumnImpl tableColumn = new TableColumnImpl();
    return tableColumn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InlineTableRow createInlineTableRow()
  {
    InlineTableRowImpl inlineTableRow = new InlineTableRowImpl();
    return inlineTableRow;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TableRowLiteral createTableRowLiteral()
  {
    TableRowLiteralImpl tableRowLiteral = new TableRowLiteralImpl();
    return tableRowLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public XawPackage getXawPackage()
  {
    return (XawPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static XawPackage getPackage()
  {
    return XawPackage.eINSTANCE;
  }

} //XawFactoryImpl
